<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.citi.portfolio.dao.PortfolioMapper" >
  <resultMap id="BaseResultMap" type="com.citi.portfolio.entity.Portfolio" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="fundManagerId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

  <resultMap id="myPortfolioMap" type="com.citi.portfolio.entity.MyPortfolio">
    <id column="name" property="name" jdbcType="VARCHAR"/>
    <result column="symbols" property="symbols" jdbcType="INTEGER"/>
    <result column="lotvalue" property="lotvalue" jdbcType="DOUBLE"/>
    <result column="benefit" property="benefit" jdbcType="DOUBLE"/>
    <result column="benefitPer" property="benefitPer" jdbcType="DOUBLE"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, fundManagerId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from portfolio
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByfundManagerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from portfolio
    where fundManagerId = #{fundmanagerid,jdbcType=INTEGER}
  </select>
  <select id="showMyPofolio" resultMap="myPortfolioMap">
  select a.fundmanagerid,a.id,a.name,a.symbols,b.lotvalue,(b.lotvalue-a.buyprice) as benefit,
    ROUND(b.lotvalue - a.buyprice * 100,2) || '%' as benefitPer from
    (select a.fundmanagerid,a.id,a.name as name, count(*) as symbols, sum(b.quantity * b.lastprice) as buyprice
    from portfolio a left join position b on a.id=b.portfolioid group by a.id,a.name) a
    left join
    (select b.portfolioid,sum(a.lastsale * b.quantity) as lotvalue from stock a left join position b
    on a.id=b.securityId group by b.portfolioid) b
    on b.portfolioid=a.id
    where a.fundmanagerid = #{fundmanagerid,jdbcType=INTEGER}

</select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from portfolio
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.citi.portfolio.entity.Portfolio" >
    insert into portfolio (id, name, fundManagerId
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{fundmanagerid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.citi.portfolio.entity.Portfolio" >
    insert into portfolio
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="fundmanagerid != null" >
        fundManagerId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fundmanagerid != null" >
        #{fundmanagerid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.citi.portfolio.entity.Portfolio" >
    update portfolio
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fundmanagerid != null" >
        fundManagerId = #{fundmanagerid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.citi.portfolio.entity.Portfolio" >
    update portfolio
    set name = #{name,jdbcType=VARCHAR},
      fundManagerId = #{fundmanagerid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>